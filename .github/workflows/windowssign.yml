name: Sign Windows Binary/Installer

on:
  workflow_dispatch:
    inputs:
      file-to-sign:
        description: name of windows file to sign
        required: true
  workflow_call:
    inputs:
      file-to-sign:
        required: true
        type: string

env:
  MASTER_KEY: master.key
  SIGNABLE_FILE_PATH: ${{ inputs.file-to-sign }}
  INSTALL_DIR: C:\Users\runneradmin\eSignerCKA
  MASTER_KEY_FILE: C:\Users\runneradmin\eSignerCKA\master.key

jobs:
  sign-file:
    runs-on: windows-latest
    name: Sign File with eSignerCKA
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Download and Unzip eSignerCKA Setup
        run: |
          Invoke-WebRequest -OutFile eSigner_CKA_Setup.zip “https://github.com/SSLcom/eSignerCKA/releases/download/v1.0.6/SSL.COM-eSigner-CKA_1.0.6.zip”
          Expand-Archive -Force eSigner_CKA_Setup.zip
          Remove-Item eSigner_CKA_Setup.zip
          Move-Item -Destination “eSigner_CKA_Installer.exe” -Path “eSigner_CKA_*\*.exe”
      - name: Setup eSignerCKA in Silent Mode
        run: |
          New-Item -ItemType Directory -Force -Path ${{ env.INSTALL_DIR }}
          ./eSigner_CKA_Installer.exe /CURRENTUSER /VERYSILENT /SUPPRESSMSGBOXES /DIR=”${{ env.INSTALL_DIR }}” | Out-Null
      - name: Config Account Information on eSignerCKA
        run: |
          ${{ env.INSTALL_DIR }}/eSignerCKATool.exe config -mode “${{ secrets.SSL_MODE }}” -user “${{ secrets.SSL_USERNAME }}” -pass “${{ secrets.SSL_PASSWORD }}” -totp “${{ secrets.SSL_TOTP_SECRET }}” -key “${{ env.MASTER_KEY_FILE }}” -r        
      - name: Load Certificate into Windows Store
        run: |
          ${{ env.INSTALL_DIR }}/eSignerCKATool.exe unload
          ${{ env.INSTALL_DIR }}/eSignerCKATool.exe load
      - name: Select Certificate From Windows Store
        run: |
          $CodeSigningCert = Get-ChildItem Cert:\CurrentUser\My -CodeSigningCert | Select-Object -First 1
          echo “THUMBPRINT=$($CodeSigningCert.Thumbprint)” >> $env:GITHUB_ENV
      - name: setup ssh
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/id_devops
          chmod 600 ~/.ssh/id_devops
          cat >>~/.ssh/config <<END
          Host *.clustercat.com
            User root
            IdentityFile ~/.ssh/id_devops
            StrictHostKeyChecking no
          END
        env:
          SSH_KEY: ${{ secrets.TESTING_SSH_KEY }}
      - name: Sign File with SignTool
        run: |
          curl https://fileserver.netmaker.org/qa/signing/unsigned/${{ env.SIGNABLE_FILE_PATH }}
          & 'C:/Program Files (x86)/Windows Kits/10/bin/10.0.22621.0/x86/signtool.exe' sign /debug /fd sha256 /tr http://ts.ssl.com /td sha256 /sha1 ${{ env.THUMBPRINT }} ${{ env.SIGNABLE_FILE_PATH }}
          scp ${{ env.SIGNABLE_FILE_PATH }} root@fileserver.netmaker.org:/var/www/files/qa/signing/signed/
      - name: Upload eSignerCKA Logs
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: eSignerCKA-Logs
          path: C:\Users\runneradmin\AppData\Roaming\eSignerCKA\KSP

