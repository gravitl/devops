name: 'Terraform'

on:
  workflow_dispatch:
    inputs:
      netmakerbranch:
        description: netmaker branch to run on.
        default: develop
        required: true
      netclientbranch:
        description: netclient branch to run on.
        default: develop
        required: true
  workflow_call:
    inputs:
      netmakerbranch:
        required: true
        type: string
      netclientbranch:
        required: true
        type: string

jobs:
  # go:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Setup go
  #     uses: actions/setup-go@v3
  #     with:
  #       go-version: 1.19
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3
      with:
        repository: gravitl/devops
  

  
  #  - name: Set Branches
  #    run: |
  #      cd qa/terraform/branchterraform
  #      echo variable \"branch\" { default = \"${{ inputs.netmakerbranch }}\" } >> variables.tf
  #      echo variable \"clientbranch\" { default = \"${{ inputs.netclientranch }}\" } >> variables.tf

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh/
        echo "$SSH_KEY" > ~/.ssh/deploy.key
        chmod 600 ~/.ssh/deploy.key 
        cat >>~/.ssh/config <<END
        Host *
          User root
          IdentityFile ~/.ssh/deploy.key
          StrictHostKeyChecking no
        END
      env:
          SSH_KEY: ${{ secrets.TESTING_SSH_KEY }}
    
    - name: Terraform Init
      run: |
        cd qa/terraform/branchterraform
        terraform init
        terraform validate
        terraform plan
        terraform apply -auto-approve
      env:
        TF_VAR_do_token: "${{ secrets.DO_TOKEN }}"
        TF_VAR_pvt_key: "${{ secrets.TESTING_SSH_KEY }}"
        TF_VAR_branch: "${{ inputs.netmakerbranch }}"
        TF_VAR_clientbranch: "${{ inputs.netclientbranch }}"
        TF_VAR_do_tag: ${{ github.run_id }}-${{ github.run_attempt }}

    - name: upload results
      uses: actions/upload-artifact@v3
      with:
        name: server
        path: serverinfo.txt



    # - name: Terraform Plan
    #   run: |
    #     cd qa/terraform/branchterraform
    #     terraform plan
    #   env:
    #     TF_VAR_do_token: "${{ secrets.DO_TOKEN }}"
    #     TF_VAR_pvt_key: "./ssh/deploy.key"
    #     TF_VAR_branch: "${{ inputs.netmakerbranch }}"
    #     TF_VAR_clientbranch: "${{ inputs.clientbranch }}"
    
    # - name: Terraform Apply
    #   run: |
    #     cd qa/terraform/branchterraform
    #     terraform apply
    #   env: 
    #     TF_VAR_do_token: "${{ secrets.DO_TOKEN }}"
    #     TF_VAR_pvt_key: "./ssh/deploy.key"
    #     TF_VAR_branch: "${{ inputs.netmakerbranch }}"
    #     TF_VAR_clientbranch: "${{ inputs.clientbranch }}"
   
    
