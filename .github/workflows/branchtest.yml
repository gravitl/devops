name: Run All Tests on Branch

on:
  workflow_call:
    inputs:
      tag:
        required: true
        type: string
      network: 
        type: string
        required: true

jobs:

  binary:
    name: build test binary
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          respository: gravitl/devops
          ref: master
      - name: setup go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: build binary
        run: |
          mkdir bin
          go build -o bin/test test/main.go
      - name: save binary
        uses: actions/cache/save@v3
        with:
          path: bin/test
          key: cache-${{ github.run_id }}-${{ github.run_attempt }}

  vars:
    runs-on: ubuntu-latest
    needs: [binary]
    outputs:
      api: ${{ steps.data.outputs.api }}
      masterkey: ${{ steps.data.outputs.masterkey }}
    steps:
      - name: get binary
        uses: actions/cache/restore@v3
        with:
          path: bin/test
          key: cache-${{ github.run_id }}-${{ github.run_attempt }}
      - name: get vars
        id: data
        run: |
          chmod +x bin/test
          api=$(bin/test getapi) 
          masterkey=$(bin/test getmasterkey) 
          echo "api=${api}" >> $GITHUB_OUTPUT
          echo "masterkey=${masterkey}" >> $GITHUB_OUTPUT
          echo api ${api}
          echo masterkey ${masterkey}    
        env:
          DIGITALOCEAN_TOKEN: ${{ secrets.DO_TOKEN  }}
          KEY: ${{ secrets.TESTING_SSH_KEY }}
          TAG: ${{ inputs.tag }}
          NETWORK: ${{ inputs.network}}

  clean:
    needs: [binary, vars]
    name: remove all gateways
    runs-on: ubuntu-latest
    steps:
      - name: get binary
        uses: actions/cache/restore@v3
        with:
          path: bin/test
          key: cache-${{ github.run_id }}-${{ github.run_attempt }}
      - name: run tests
        id: clean
        run: |
          chmod +x bin/test
          bin/test clean
        env:
          DIGITALOCEAN_TOKEN: ${{ secrets.DO_TOKEN  }}
          KEY: ${{ secrets.TESTING_SSH_KEY }}
          TAG: ${{ inputs.tag }}
          NETWORK: ${{ inputs.network}}
          MASTERKEY: ${{ needs.vars.outputs.masterkey }}
          API: ${{ needs.vars.outputs.api }}
      - name: save logs
        uses: actions/upload-artifact@v3
        with:
          name: clean.log
          path: /tmp/clean.log
          retention-days: 3


  initial-ping:
    needs: [binary, vars, clean]
    name: initial ping
    runs-on: ubuntu-latest
    steps:
      - name: get binary
        uses: actions/cache/restore@v3
        with:
          path: bin/test
          key: cache-${{ github.run_id }}-${{ github.run_attempt }}
      - name: run tests
        id: ping
        run: |
          chmod +x bin/test
          bin/test ping
        env:
          DIGITALOCEAN_TOKEN: ${{ secrets.DO_TOKEN  }}
          KEY: ${{ secrets.TESTING_SSH_KEY }}
          TAG: ${{ inputs.tag }}
          NETWORK: ${{ inputs.network }}
          MASTERKEY: ${{ needs.vars.outputs.masterkey }}
          API: ${{ needs.vars.outputs.api }}
      - name: save logs
        uses: actions/upload-artifact@v3
        with:
          name: ping.log
          path: /tmp/ping.log
          retention-days: 3

  tests:
    needs: [binary, vars, initial-ping, clean]
    name: tests
    runs-on: ubuntu-latest
    steps:
      - name: get binary
        uses: actions/cache/restore@v3
        with:
          path: bin/test
          key: cache-${{ github.run_id }}-${{ github.run_attempt }}
      - name: run tests
        run: |
          chmod +x bin/test
          bin/test peerUpdate
          bin/test ingress
          bin/test egress
          bin/test relay
        env:
          DIGITALOCEAN_TOKEN: ${{ secrets.DO_TOKEN  }}
          KEY: ${{ secrets.TESTING_SSH_KEY }}
          TAG: ${{ inputs.tag }}
          NETWORK: ${{ inputs.network }}
          MASTERKEY: ${{ needs.vars.outputs.masterkey }}
          API: ${{ needs.vars.outputs.api }}
      - name: save logs
        uses: actions/upload-artifact@v3
        with:
          name: tests.log
          path: /tmp/*.log
          retention-days: 3

  final-ping:
    needs: [binary, vars, tests]
    name: final ping
    runs-on: ubuntu-latest
    steps:
      - name: get binary
        uses: actions/cache/restore@v3
        with:
          path: bin/test
          key: cache-${{ github.run_id }}-${{ github.run_attempt }}
      - name: run tests
        run: |
          chmod +x bin/test
          bin/test ping
        env:
          DIGITALOCEAN_TOKEN: ${{ secrets.DO_TOKEN  }}
          KEY: ${{ secrets.TESTING_SSH_KEY }}
          TAG: ${{ inputs.tag }}
          NETWORK: ${{ inputs.network }}
          MASTERKEY: ${{ needs.vars.outputs.masterkey }}
          API: ${{ needs.vars.outputs.api }}
      - name: save logs
        uses: actions/upload-artifact@v3
        with:
          name: ping2.log
          path: /tmp/ping.log
          retention-days: 3

  results:
    needs: [clean, initial-ping, tests, final-ping]
    name: sumarize results
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: get logs
        uses: actions/download-artifact@v3
        with:
          path: /tmp
      - name: generate results
        run: |
          test/scripts/results.sh
      - name: upload results
        uses: actions/upload-artifact@v3
        with:
          name: results
          path: |
            /tmp/results.log
            /tmp/errors.log
          retention-days: 3
      - name: final result
        run: |
          grep -v ERROR /tmp/errors.log

